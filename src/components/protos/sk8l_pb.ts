// Copyright 2023 DR
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v2.2.5 with parameter "target=ts,import_extension=.ts"
// @generated from file sk8l.proto (package sk8l, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { ObjectMeta, Time } from "./k8s.io/apimachinery/pkg/apis/meta/v1/generated_pb.ts";
import { file_k8s_io_apimachinery_pkg_apis_meta_v1_generated } from "./k8s.io/apimachinery/pkg/apis/meta/v1/generated_pb.ts";
import type { CronJobSpec, Job, JobCondition, JobSpec, JobStatus } from "./k8s.io/api/batch/v1/generated_pb.ts";
import { file_k8s_io_api_batch_v1_generated } from "./k8s.io/api/batch/v1/generated_pb.ts";
import type { ContainerStateTerminated, ContainerStatus, PodCondition, PodSpec, PodStatus } from "./k8s.io/api/core/v1/generated_pb.ts";
import { file_k8s_io_api_core_v1_generated } from "./k8s.io/api/core/v1/generated_pb.ts";
import type { JobStatus as JobStatus$1 } from "./sk8l_custom_pb.ts";
import { file_sk8l_custom } from "./sk8l_custom_pb.ts";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sk8l.proto.
 */
export const file_sk8l: GenFile = /*@__PURE__*/
  fileDesc("CgpzazhsLnByb3RvEgRzazhsIhEKD0Nyb25qb2JzUmVxdWVzdCI/Cg5Dcm9uam9iUmVxdWVzdBITCgtjcm9uam9iTmFtZRgBIAEoCRIYChBjcm9uam9iTmFtZXNwYWNlGAIgASgJIkMKEkNyb25qb2JQb2RzUmVxdWVzdBITCgtjcm9uam9iTmFtZRgBIAEoCRIYChBjcm9uam9iTmFtZXNwYWNlGAIgASgJIg0KC0pvYnNSZXF1ZXN0IjMKCkpvYlJlcXVlc3QSDwoHam9iTmFtZRgBIAEoCRIUCgxqb2JOYW1lc3BhY2UYAiABKAkiMwoKUG9kUmVxdWVzdBIPCgdwb2ROYW1lGAEgASgJEhQKDHBvZE5hbWVzcGFjZRgCIAEoCSIdChtEYXNoYm9hcmRBbm5vdGF0aW9uc1JlcXVlc3QiMwocRGFzaGJvYXJkQW5ub3RhdGlvbnNSZXNwb25zZRITCgthbm5vdGF0aW9ucxgBIAEoCSKfAQoQQ3JvbmpvYnNSZXNwb25zZRInCghjcm9uam9icxgFIAMoCzIVLnNrOGwuQ3JvbmpvYlJlc3BvbnNlEjIKCmFjdGl2ZUpvYnMYBCADKAsyES5zazhsLkpvYlJlc3BvbnNlUgthY3RpdmVfam9icxIuCghqb2JzUG9kcxgDIAMoCzIRLnNrOGwuUG9kUmVzcG9uc2VSCWpvYnNfcG9kcyLsBAoLSm9iUmVzcG9uc2USQgoIbWV0YWRhdGEYASABKAsyMC5rOHMuaW8uYXBpbWFjaGluZXJ5LnBrZy5hcGlzLm1ldGEudjEuT2JqZWN0TWV0YRIqCgRzcGVjGAIgASgLMhwuazhzLmlvLmFwaS5iYXRjaC52MS5Kb2JTcGVjEjEKCWpvYlN0YXR1cxgDIAEoCzIeLms4cy5pby5hcGkuYmF0Y2gudjEuSm9iU3RhdHVzEgwKBG5hbWUYBCABKAkSEQoJbmFtZXNwYWNlGAUgASgJEi0KEWNyZWF0aW9uVGltZXN0YW1wGAYgASgJUhJjcmVhdGlvbl90aW1lc3RhbXASEQoEVXVpZBgHIAEoCVIDdWlkEhIKCmdlbmVyYXRpb24YCCABKAMSEAoIZHVyYXRpb24YCSABKAkSIgoLZHVyYXRpb25JblMYCiABKANSDWR1cmF0aW9uX2luX3MSJgoGc3RhdHVzGAsgASgLMhYuc2s4bF9jdXN0b20uSm9iU3RhdHVzEhEKCXN1Y2NlZWRlZBgMIAEoCBIXCgZmYWlsZWQYDSABKAhSB2ZhaWx1cmUSTgoQZmFpbHVyZUNvbmRpdGlvbhgOIAEoCzIhLms4cy5pby5hcGkuYmF0Y2gudjEuSm9iQ29uZGl0aW9uUhFmYWlsdXJlX2NvbmRpdGlvbhIfCgRwb2RzGA8gAygLMhEuc2s4bC5Qb2RSZXNwb25zZRJIChJ0ZXJtaW5hdGlvblJlYXNvbnMYECADKAsyFy5zazhsLlRlcm1pbmF0aW9uUmVhc29uUhN0ZXJtaW5hdGlvbl9yZWFzb25zIi8KDEpvYnNSZXNwb25zZRIfCgRqb2JzGAEgAygLMhEuc2s4bC5Kb2JSZXNwb25zZSImChNDcm9uam9iWUFNTFJlc3BvbnNlEg8KB2Nyb25qb2IYASABKAkiHgoPSm9iWUFNTFJlc3BvbnNlEgsKA2pvYhgBIAEoCSIeCg9Qb2RZQU1MUmVzcG9uc2USCwoDcG9kGAEgASgJIvsDCgtQb2RSZXNwb25zZRJCCghtZXRhZGF0YRgBIAEoCzIwLms4cy5pby5hcGltYWNoaW5lcnkucGtnLmFwaXMubWV0YS52MS5PYmplY3RNZXRhEikKBHNwZWMYAiABKAsyGy5rOHMuaW8uYXBpLmNvcmUudjEuUG9kU3BlYxItCgZzdGF0dXMYAyABKAsyHS5rOHMuaW8uYXBpLmNvcmUudjEuUG9kU3RhdHVzEg0KBXBoYXNlGAQgASgJEk8KFHRlcm1pbmF0ZWRDb250YWluZXJzGAUgASgLMhouc2s4bC5UZXJtaW5hdGVkQ29udGFpbmVyc1IVdGVybWluYXRlZF9jb250YWluZXJzEkcKEGZhaWxlZENvbnRhaW5lcnMYBiABKAsyGi5zazhsLlRlcm1pbmF0ZWRDb250YWluZXJzUhFmYWlsZWRfY29udGFpbmVycxIOCgZmYWlsZWQYByABKAgSSAoSdGVybWluYXRpb25SZWFzb25zGAggAygLMhcuc2s4bC5UZXJtaW5hdGlvblJlYXNvblITdGVybWluYXRpb25fcmVhc29ucxJLCgpGaW5pc2hlZEF0GAkgASgLMiouazhzLmlvLmFwaW1hY2hpbmVyeS5wa2cuYXBpcy5tZXRhLnYxLlRpbWVSC2ZpbmlzaGVkX2F0IiUKEUNvbnRhaW5lckNvbW1hbmRzEhAKCGNvbW1hbmRzGAEgAygJIsABChFDb250YWluZXJSZXNwb25zZRIzCgZzdGF0dXMYASABKAsyIy5rOHMuaW8uYXBpLmNvcmUudjEuQ29udGFpbmVyU3RhdHVzEg0KBXBoYXNlGAIgASgJEjQKCmNvbmRpdGlvbnMYAyADKAsyIC5rOHMuaW8uYXBpLmNvcmUudjEuUG9kQ29uZGl0aW9uEjEKEHRlcm1pbmF0ZWRSZWFzb24YBCABKAsyFy5zazhsLlRlcm1pbmF0aW9uUmVhc29uIoQBChFUZXJtaW5hdGlvblJlYXNvbhJIChJ0ZXJtaW5hdGlvbkRldGFpbHMYASABKAsyLC5rOHMuaW8uYXBpLmNvcmUudjEuQ29udGFpbmVyU3RhdGVUZXJtaW5hdGVkEiUKDWNvbnRhaW5lck5hbWUYAiABKAlSDmNvbnRhaW5lcl9uYW1lIpsCChRUZXJtaW5hdGVkQ29udGFpbmVycxJACg5pbml0Q29udGFpbmVycxgBIAMoCzIXLnNrOGwuQ29udGFpbmVyUmVzcG9uc2VSD2luaXRfY29udGFpbmVycxIrCgpjb250YWluZXJzGAIgAygLMhcuc2s4bC5Db250YWluZXJSZXNwb25zZRJKChNlcGhlbWVyYWxDb250YWluZXJzGAMgAygLMhcuc2s4bC5Db250YWluZXJSZXNwb25zZVIUZXBoZW1lcmFsX2NvbnRhaW5lcnMSSAoSdGVybWluYXRpb25SZWFzb25zGAQgAygLMhcuc2s4bC5UZXJtaW5hdGlvblJlYXNvblITdGVybWluYXRpb25fcmVhc29ucyL4BQoPQ3JvbmpvYlJlc3BvbnNlEgwKBG5hbWUYASABKAkSEQoJbmFtZXNwYWNlGAIgASgJEgsKA3VpZBgDIAEoCRJbChFjb250YWluZXJDb21tYW5kcxgEIAMoCzIsLnNrOGwuQ3JvbmpvYlJlc3BvbnNlLkNvbnRhaW5lckNvbW1hbmRzRW50cnlSEmNvbnRhaW5lcl9jb21tYW5kcxItChFjcmVhdGlvblRpbWVzdGFtcBgFIAEoCVISY3JlYXRpb25fdGltZXN0YW1wEhIKCmRlZmluaXRpb24YBiABKAkSMAoSbGFzdFN1Y2Nlc3NmdWxUaW1lGAcgASgJUhRsYXN0X3N1Y2Nlc3NmdWxfdGltZRIsChBsYXN0U2NoZWR1bGVUaW1lGAggASgJUhJsYXN0X3NjaGVkdWxlX3RpbWUSDgoGYWN0aXZlGAogASgIEh8KBGpvYnMYCyADKAsyES5zazhsLkpvYlJlc3BvbnNlEjQKC3J1bm5pbmdKb2JzGAwgAygLMhEuc2s4bC5Kb2JSZXNwb25zZVIMcnVubmluZ19qb2JzEj0KD3J1bm5pbmdKb2JzUG9kcxgNIAMoCzIRLnNrOGwuUG9kUmVzcG9uc2VSEXJ1bm5pbmdfam9ic19wb2RzEi4KCGpvYnNQb2RzGA4gAygLMhEuc2s4bC5Qb2RSZXNwb25zZVIJam9ic19wb2RzEiMKDGxhc3REdXJhdGlvbhgPIAEoA1INbGFzdF9kdXJhdGlvbhIpCg9jdXJyZW50RHVyYXRpb24YECABKANSEGN1cnJlbnRfZHVyYXRpb24SLgoEc3BlYxgRIAEoCzIgLms4cy5pby5hcGkuYmF0Y2gudjEuQ3JvbkpvYlNwZWMSDgoGZmFpbGVkGBIgASgIGlEKFkNvbnRhaW5lckNvbW1hbmRzRW50cnkSCwoDa2V5GAEgASgJEiYKBXZhbHVlGAIgASgLMhcuc2s4bC5Db250YWluZXJDb21tYW5kczoCOAEiXgoTQ3JvbmpvYlBvZHNSZXNwb25zZRIfCgRwb2RzGAEgAygLMhEuc2s4bC5Qb2RSZXNwb25zZRImCgdjcm9uam9iGAIgASgLMhUuc2s4bC5Dcm9uam9iUmVzcG9uc2UiMgoHSm9iTGlzdBInCgVJdGVtcxgBIAMoCzIYLms4cy5pby5hcGkuYmF0Y2gudjEuSm9iIn4KCk1hcHBlZEpvYnMSMAoISm9iTGlzdHMYASADKAsyHi5zazhsLk1hcHBlZEpvYnMuSm9iTGlzdHNFbnRyeRo+Cg1Kb2JMaXN0c0VudHJ5EgsKA2tleRgBIAEoCRIcCgV2YWx1ZRgCIAEoCzINLnNrOGwuSm9iTGlzdDoCOAEylgQKB0Nyb25qb2ISPgoLR2V0Q3JvbmpvYnMSFS5zazhsLkNyb25qb2JzUmVxdWVzdBoWLnNrOGwuQ3JvbmpvYnNSZXNwb25zZTABEjsKCkdldENyb25qb2ISFC5zazhsLkNyb25qb2JSZXF1ZXN0GhUuc2s4bC5Dcm9uam9iUmVzcG9uc2UwARJHCg5HZXRDcm9uam9iUG9kcxIYLnNrOGwuQ3JvbmpvYlBvZHNSZXF1ZXN0Ghkuc2s4bC5Dcm9uam9iUG9kc1Jlc3BvbnNlMAESMgoHR2V0Sm9icxIRLnNrOGwuSm9ic1JlcXVlc3QaEi5zazhsLkpvYnNSZXNwb25zZTABEkEKDkdldENyb25qb2JZQU1MEhQuc2s4bC5Dcm9uam9iUmVxdWVzdBoZLnNrOGwuQ3JvbmpvYllBTUxSZXNwb25zZRI1CgpHZXRKb2JZQU1MEhAuc2s4bC5Kb2JSZXF1ZXN0GhUuc2s4bC5Kb2JZQU1MUmVzcG9uc2USNQoKR2V0UG9kWUFNTBIQLnNrOGwuUG9kUmVxdWVzdBoVLnNrOGwuUG9kWUFNTFJlc3BvbnNlEmAKF0dldERhc2hib2FyZEFubm90YXRpb25zEiEuc2s4bC5EYXNoYm9hcmRBbm5vdGF0aW9uc1JlcXVlc3QaIi5zazhsLkRhc2hib2FyZEFubm90YXRpb25zUmVzcG9uc2ViBnByb3RvMw", [file_k8s_io_apimachinery_pkg_apis_meta_v1_generated, file_k8s_io_api_batch_v1_generated, file_k8s_io_api_core_v1_generated, file_sk8l_custom]);

/**
 * @generated from message sk8l.CronjobsRequest
 */
export type CronjobsRequest = Message<"sk8l.CronjobsRequest"> & {
};

/**
 * Describes the message sk8l.CronjobsRequest.
 * Use `create(CronjobsRequestSchema)` to create a new message.
 */
export const CronjobsRequestSchema: GenMessage<CronjobsRequest> = /*@__PURE__*/
  messageDesc(file_sk8l, 0);

/**
 * @generated from message sk8l.CronjobRequest
 */
export type CronjobRequest = Message<"sk8l.CronjobRequest"> & {
  /**
   * @generated from field: string cronjobName = 1;
   */
  cronjobName: string;

  /**
   * @generated from field: string cronjobNamespace = 2;
   */
  cronjobNamespace: string;
};

/**
 * Describes the message sk8l.CronjobRequest.
 * Use `create(CronjobRequestSchema)` to create a new message.
 */
export const CronjobRequestSchema: GenMessage<CronjobRequest> = /*@__PURE__*/
  messageDesc(file_sk8l, 1);

/**
 * @generated from message sk8l.CronjobPodsRequest
 */
export type CronjobPodsRequest = Message<"sk8l.CronjobPodsRequest"> & {
  /**
   * @generated from field: string cronjobName = 1;
   */
  cronjobName: string;

  /**
   * @generated from field: string cronjobNamespace = 2;
   */
  cronjobNamespace: string;
};

/**
 * Describes the message sk8l.CronjobPodsRequest.
 * Use `create(CronjobPodsRequestSchema)` to create a new message.
 */
export const CronjobPodsRequestSchema: GenMessage<CronjobPodsRequest> = /*@__PURE__*/
  messageDesc(file_sk8l, 2);

/**
 * @generated from message sk8l.JobsRequest
 */
export type JobsRequest = Message<"sk8l.JobsRequest"> & {
};

/**
 * Describes the message sk8l.JobsRequest.
 * Use `create(JobsRequestSchema)` to create a new message.
 */
export const JobsRequestSchema: GenMessage<JobsRequest> = /*@__PURE__*/
  messageDesc(file_sk8l, 3);

/**
 * @generated from message sk8l.JobRequest
 */
export type JobRequest = Message<"sk8l.JobRequest"> & {
  /**
   * @generated from field: string jobName = 1;
   */
  jobName: string;

  /**
   * @generated from field: string jobNamespace = 2;
   */
  jobNamespace: string;
};

/**
 * Describes the message sk8l.JobRequest.
 * Use `create(JobRequestSchema)` to create a new message.
 */
export const JobRequestSchema: GenMessage<JobRequest> = /*@__PURE__*/
  messageDesc(file_sk8l, 4);

/**
 * @generated from message sk8l.PodRequest
 */
export type PodRequest = Message<"sk8l.PodRequest"> & {
  /**
   * @generated from field: string podName = 1;
   */
  podName: string;

  /**
   * @generated from field: string podNamespace = 2;
   */
  podNamespace: string;
};

/**
 * Describes the message sk8l.PodRequest.
 * Use `create(PodRequestSchema)` to create a new message.
 */
export const PodRequestSchema: GenMessage<PodRequest> = /*@__PURE__*/
  messageDesc(file_sk8l, 5);

/**
 * @generated from message sk8l.DashboardAnnotationsRequest
 */
export type DashboardAnnotationsRequest = Message<"sk8l.DashboardAnnotationsRequest"> & {
};

/**
 * Describes the message sk8l.DashboardAnnotationsRequest.
 * Use `create(DashboardAnnotationsRequestSchema)` to create a new message.
 */
export const DashboardAnnotationsRequestSchema: GenMessage<DashboardAnnotationsRequest> = /*@__PURE__*/
  messageDesc(file_sk8l, 6);

/**
 * @generated from message sk8l.DashboardAnnotationsResponse
 */
export type DashboardAnnotationsResponse = Message<"sk8l.DashboardAnnotationsResponse"> & {
  /**
   * @generated from field: string annotations = 1;
   */
  annotations: string;
};

/**
 * Describes the message sk8l.DashboardAnnotationsResponse.
 * Use `create(DashboardAnnotationsResponseSchema)` to create a new message.
 */
export const DashboardAnnotationsResponseSchema: GenMessage<DashboardAnnotationsResponse> = /*@__PURE__*/
  messageDesc(file_sk8l, 7);

/**
 * @generated from message sk8l.CronjobsResponse
 */
export type CronjobsResponse = Message<"sk8l.CronjobsResponse"> & {
  /**
   * @generated from field: repeated sk8l.CronjobResponse cronjobs = 5;
   */
  cronjobs: CronjobResponse[];

  /**
   * @generated from field: repeated sk8l.JobResponse activeJobs = 4 [json_name = "active_jobs"];
   */
  activeJobs: JobResponse[];

  /**
   * @generated from field: repeated sk8l.PodResponse jobsPods = 3 [json_name = "jobs_pods"];
   */
  jobsPods: PodResponse[];
};

/**
 * Describes the message sk8l.CronjobsResponse.
 * Use `create(CronjobsResponseSchema)` to create a new message.
 */
export const CronjobsResponseSchema: GenMessage<CronjobsResponse> = /*@__PURE__*/
  messageDesc(file_sk8l, 8);

/**
 * @generated from message sk8l.JobResponse
 */
export type JobResponse = Message<"sk8l.JobResponse"> & {
  /**
   * @generated from field: k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
   */
  metadata?: ObjectMeta;

  /**
   * @generated from field: k8s.io.api.batch.v1.JobSpec spec = 2;
   */
  spec?: JobSpec;

  /**
   * remove?
   *
   * @generated from field: k8s.io.api.batch.v1.JobStatus jobStatus = 3;
   */
  jobStatus?: JobStatus;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string namespace = 5;
   */
  namespace: string;

  /**
   * @generated from field: string creationTimestamp = 6 [json_name = "creation_timestamp"];
   */
  creationTimestamp: string;

  /**
   * More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
   *
   * @generated from field: string Uuid = 7 [json_name = "uid"];
   */
  Uuid: string;

  /**
   * @generated from field: int64 generation = 8;
   */
  generation: bigint;

  /**
   * @generated from field: string duration = 9;
   */
  duration: string;

  /**
   * @generated from field: int64 durationInS = 10 [json_name = "duration_in_s"];
   */
  durationInS: bigint;

  /**
   * @generated from field: sk8l_custom.JobStatus status = 11;
   */
  status?: JobStatus$1;

  /**
   * @generated from field: bool succeeded = 12;
   */
  succeeded: boolean;

  /**
   * @generated from field: bool failed = 13 [json_name = "failure"];
   */
  failed: boolean;

  /**
   * @generated from field: k8s.io.api.batch.v1.JobCondition failureCondition = 14 [json_name = "failure_condition"];
   */
  failureCondition?: JobCondition;

  /**
   * @generated from field: repeated sk8l.PodResponse pods = 15;
   */
  pods: PodResponse[];

  /**
   * @generated from field: repeated sk8l.TerminationReason terminationReasons = 16 [json_name = "termination_reasons"];
   */
  terminationReasons: TerminationReason[];
};

/**
 * Describes the message sk8l.JobResponse.
 * Use `create(JobResponseSchema)` to create a new message.
 */
export const JobResponseSchema: GenMessage<JobResponse> = /*@__PURE__*/
  messageDesc(file_sk8l, 9);

/**
 * @generated from message sk8l.JobsResponse
 */
export type JobsResponse = Message<"sk8l.JobsResponse"> & {
  /**
   * @generated from field: repeated sk8l.JobResponse jobs = 1;
   */
  jobs: JobResponse[];
};

/**
 * Describes the message sk8l.JobsResponse.
 * Use `create(JobsResponseSchema)` to create a new message.
 */
export const JobsResponseSchema: GenMessage<JobsResponse> = /*@__PURE__*/
  messageDesc(file_sk8l, 10);

/**
 * @generated from message sk8l.CronjobYAMLResponse
 */
export type CronjobYAMLResponse = Message<"sk8l.CronjobYAMLResponse"> & {
  /**
   * @generated from field: string cronjob = 1;
   */
  cronjob: string;
};

/**
 * Describes the message sk8l.CronjobYAMLResponse.
 * Use `create(CronjobYAMLResponseSchema)` to create a new message.
 */
export const CronjobYAMLResponseSchema: GenMessage<CronjobYAMLResponse> = /*@__PURE__*/
  messageDesc(file_sk8l, 11);

/**
 * @generated from message sk8l.JobYAMLResponse
 */
export type JobYAMLResponse = Message<"sk8l.JobYAMLResponse"> & {
  /**
   * @generated from field: string job = 1;
   */
  job: string;
};

/**
 * Describes the message sk8l.JobYAMLResponse.
 * Use `create(JobYAMLResponseSchema)` to create a new message.
 */
export const JobYAMLResponseSchema: GenMessage<JobYAMLResponse> = /*@__PURE__*/
  messageDesc(file_sk8l, 12);

/**
 * @generated from message sk8l.PodYAMLResponse
 */
export type PodYAMLResponse = Message<"sk8l.PodYAMLResponse"> & {
  /**
   * @generated from field: string pod = 1;
   */
  pod: string;
};

/**
 * Describes the message sk8l.PodYAMLResponse.
 * Use `create(PodYAMLResponseSchema)` to create a new message.
 */
export const PodYAMLResponseSchema: GenMessage<PodYAMLResponse> = /*@__PURE__*/
  messageDesc(file_sk8l, 13);

/**
 * @generated from message sk8l.PodResponse
 */
export type PodResponse = Message<"sk8l.PodResponse"> & {
  /**
   * @generated from field: k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
   */
  metadata?: ObjectMeta;

  /**
   * @generated from field: k8s.io.api.core.v1.PodSpec spec = 2;
   */
  spec?: PodSpec;

  /**
   * @generated from field: k8s.io.api.core.v1.PodStatus status = 3;
   */
  status?: PodStatus;

  /**
   * @generated from field: string phase = 4;
   */
  phase: string;

  /**
   * @generated from field: sk8l.TerminatedContainers terminatedContainers = 5 [json_name = "terminated_containers"];
   */
  terminatedContainers?: TerminatedContainers;

  /**
   * @generated from field: sk8l.TerminatedContainers failedContainers = 6 [json_name = "failed_containers"];
   */
  failedContainers?: TerminatedContainers;

  /**
   * @generated from field: bool failed = 7;
   */
  failed: boolean;

  /**
   * @generated from field: repeated sk8l.TerminationReason terminationReasons = 8 [json_name = "termination_reasons"];
   */
  terminationReasons: TerminationReason[];

  /**
   * @generated from field: k8s.io.apimachinery.pkg.apis.meta.v1.Time FinishedAt = 9 [json_name = "finished_at"];
   */
  FinishedAt?: Time;
};

/**
 * Describes the message sk8l.PodResponse.
 * Use `create(PodResponseSchema)` to create a new message.
 */
export const PodResponseSchema: GenMessage<PodResponse> = /*@__PURE__*/
  messageDesc(file_sk8l, 14);

/**
 * @generated from message sk8l.ContainerCommands
 */
export type ContainerCommands = Message<"sk8l.ContainerCommands"> & {
  /**
   * @generated from field: repeated string commands = 1;
   */
  commands: string[];
};

/**
 * Describes the message sk8l.ContainerCommands.
 * Use `create(ContainerCommandsSchema)` to create a new message.
 */
export const ContainerCommandsSchema: GenMessage<ContainerCommands> = /*@__PURE__*/
  messageDesc(file_sk8l, 15);

/**
 * @generated from message sk8l.ContainerResponse
 */
export type ContainerResponse = Message<"sk8l.ContainerResponse"> & {
  /**
   * @generated from field: k8s.io.api.core.v1.ContainerStatus status = 1;
   */
  status?: ContainerStatus;

  /**
   * @generated from field: string phase = 2;
   */
  phase: string;

  /**
   * @generated from field: repeated k8s.io.api.core.v1.PodCondition conditions = 3;
   */
  conditions: PodCondition[];

  /**
   * @generated from field: sk8l.TerminationReason terminatedReason = 4;
   */
  terminatedReason?: TerminationReason;
};

/**
 * Describes the message sk8l.ContainerResponse.
 * Use `create(ContainerResponseSchema)` to create a new message.
 */
export const ContainerResponseSchema: GenMessage<ContainerResponse> = /*@__PURE__*/
  messageDesc(file_sk8l, 16);

/**
 * @generated from message sk8l.TerminationReason
 */
export type TerminationReason = Message<"sk8l.TerminationReason"> & {
  /**
   * @generated from field: k8s.io.api.core.v1.ContainerStateTerminated terminationDetails = 1;
   */
  terminationDetails?: ContainerStateTerminated;

  /**
   * @generated from field: string containerName = 2 [json_name = "container_name"];
   */
  containerName: string;
};

/**
 * Describes the message sk8l.TerminationReason.
 * Use `create(TerminationReasonSchema)` to create a new message.
 */
export const TerminationReasonSchema: GenMessage<TerminationReason> = /*@__PURE__*/
  messageDesc(file_sk8l, 17);

/**
 * @generated from message sk8l.TerminatedContainers
 */
export type TerminatedContainers = Message<"sk8l.TerminatedContainers"> & {
  /**
   * @generated from field: repeated sk8l.ContainerResponse initContainers = 1 [json_name = "init_containers"];
   */
  initContainers: ContainerResponse[];

  /**
   * @generated from field: repeated sk8l.ContainerResponse containers = 2;
   */
  containers: ContainerResponse[];

  /**
   * @generated from field: repeated sk8l.ContainerResponse ephemeralContainers = 3 [json_name = "ephemeral_containers"];
   */
  ephemeralContainers: ContainerResponse[];

  /**
   * @generated from field: repeated sk8l.TerminationReason terminationReasons = 4 [json_name = "termination_reasons"];
   */
  terminationReasons: TerminationReason[];
};

/**
 * Describes the message sk8l.TerminatedContainers.
 * Use `create(TerminatedContainersSchema)` to create a new message.
 */
export const TerminatedContainersSchema: GenMessage<TerminatedContainers> = /*@__PURE__*/
  messageDesc(file_sk8l, 18);

/**
 * @generated from message sk8l.CronjobResponse
 */
export type CronjobResponse = Message<"sk8l.CronjobResponse"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string namespace = 2;
   */
  namespace: string;

  /**
   * @generated from field: string uid = 3;
   */
  uid: string;

  /**
   * @generated from field: map<string, sk8l.ContainerCommands> containerCommands = 4 [json_name = "container_commands"];
   */
  containerCommands: { [key: string]: ContainerCommands };

  /**
   * @generated from field: string creationTimestamp = 5 [json_name = "creation_timestamp"];
   */
  creationTimestamp: string;

  /**
   * @generated from field: string definition = 6;
   */
  definition: string;

  /**
   * @generated from field: string lastSuccessfulTime = 7 [json_name = "last_successful_time"];
   */
  lastSuccessfulTime: string;

  /**
   * @generated from field: string lastScheduleTime = 8 [json_name = "last_schedule_time"];
   */
  lastScheduleTime: string;

  /**
   * @generated from field: bool active = 10;
   */
  active: boolean;

  /**
   * @generated from field: repeated sk8l.JobResponse jobs = 11;
   */
  jobs: JobResponse[];

  /**
   * @generated from field: repeated sk8l.JobResponse runningJobs = 12 [json_name = "running_jobs"];
   */
  runningJobs: JobResponse[];

  /**
   * @generated from field: repeated sk8l.PodResponse runningJobsPods = 13 [json_name = "running_jobs_pods"];
   */
  runningJobsPods: PodResponse[];

  /**
   * @generated from field: repeated sk8l.PodResponse jobsPods = 14 [json_name = "jobs_pods"];
   */
  jobsPods: PodResponse[];

  /**
   * @generated from field: int64 lastDuration = 15 [json_name = "last_duration"];
   */
  lastDuration: bigint;

  /**
   * @generated from field: int64 currentDuration = 16 [json_name = "current_duration"];
   */
  currentDuration: bigint;

  /**
   * @generated from field: k8s.io.api.batch.v1.CronJobSpec spec = 17;
   */
  spec?: CronJobSpec;

  /**
   * @generated from field: bool failed = 18;
   */
  failed: boolean;
};

/**
 * Describes the message sk8l.CronjobResponse.
 * Use `create(CronjobResponseSchema)` to create a new message.
 */
export const CronjobResponseSchema: GenMessage<CronjobResponse> = /*@__PURE__*/
  messageDesc(file_sk8l, 19);

/**
 * @generated from message sk8l.CronjobPodsResponse
 */
export type CronjobPodsResponse = Message<"sk8l.CronjobPodsResponse"> & {
  /**
   * @generated from field: repeated sk8l.PodResponse pods = 1;
   */
  pods: PodResponse[];

  /**
   * @generated from field: sk8l.CronjobResponse cronjob = 2;
   */
  cronjob?: CronjobResponse;
};

/**
 * Describes the message sk8l.CronjobPodsResponse.
 * Use `create(CronjobPodsResponseSchema)` to create a new message.
 */
export const CronjobPodsResponseSchema: GenMessage<CronjobPodsResponse> = /*@__PURE__*/
  messageDesc(file_sk8l, 20);

/**
 * @generated from message sk8l.JobList
 */
export type JobList = Message<"sk8l.JobList"> & {
  /**
   * @generated from field: repeated k8s.io.api.batch.v1.Job Items = 1;
   */
  Items: Job[];
};

/**
 * Describes the message sk8l.JobList.
 * Use `create(JobListSchema)` to create a new message.
 */
export const JobListSchema: GenMessage<JobList> = /*@__PURE__*/
  messageDesc(file_sk8l, 21);

/**
 * @generated from message sk8l.MappedJobs
 */
export type MappedJobs = Message<"sk8l.MappedJobs"> & {
  /**
   * google.protobuf.ListValue Jobs = 1;
   *
   * @generated from field: map<string, sk8l.JobList> JobLists = 1;
   */
  JobLists: { [key: string]: JobList };
};

/**
 * Describes the message sk8l.MappedJobs.
 * Use `create(MappedJobsSchema)` to create a new message.
 */
export const MappedJobsSchema: GenMessage<MappedJobs> = /*@__PURE__*/
  messageDesc(file_sk8l, 22);

/**
 * @generated from service sk8l.Cronjob
 */
export const Cronjob: GenService<{
  /**
   * @generated from rpc sk8l.Cronjob.GetCronjobs
   */
  getCronjobs: {
    methodKind: "server_streaming";
    input: typeof CronjobsRequestSchema;
    output: typeof CronjobsResponseSchema;
  },
  /**
   * @generated from rpc sk8l.Cronjob.GetCronjob
   */
  getCronjob: {
    methodKind: "server_streaming";
    input: typeof CronjobRequestSchema;
    output: typeof CronjobResponseSchema;
  },
  /**
   * @generated from rpc sk8l.Cronjob.GetCronjobPods
   */
  getCronjobPods: {
    methodKind: "server_streaming";
    input: typeof CronjobPodsRequestSchema;
    output: typeof CronjobPodsResponseSchema;
  },
  /**
   * @generated from rpc sk8l.Cronjob.GetJobs
   */
  getJobs: {
    methodKind: "server_streaming";
    input: typeof JobsRequestSchema;
    output: typeof JobsResponseSchema;
  },
  /**
   * @generated from rpc sk8l.Cronjob.GetCronjobYAML
   */
  getCronjobYAML: {
    methodKind: "unary";
    input: typeof CronjobRequestSchema;
    output: typeof CronjobYAMLResponseSchema;
  },
  /**
   * @generated from rpc sk8l.Cronjob.GetJobYAML
   */
  getJobYAML: {
    methodKind: "unary";
    input: typeof JobRequestSchema;
    output: typeof JobYAMLResponseSchema;
  },
  /**
   * @generated from rpc sk8l.Cronjob.GetPodYAML
   */
  getPodYAML: {
    methodKind: "unary";
    input: typeof PodRequestSchema;
    output: typeof PodYAMLResponseSchema;
  },
  /**
   * @generated from rpc sk8l.Cronjob.GetDashboardAnnotations
   */
  getDashboardAnnotations: {
    methodKind: "unary";
    input: typeof DashboardAnnotationsRequestSchema;
    output: typeof DashboardAnnotationsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_sk8l, 0);


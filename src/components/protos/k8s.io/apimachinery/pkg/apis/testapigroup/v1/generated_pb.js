// source: k8s.io/apimachinery/pkg/apis/testapigroup/v1/generated.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb = require('../../../../../../k8s.io/apimachinery/pkg/apis/meta/v1/generated_pb.js');
goog.object.extend(proto, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb);
var k8s_io_apimachinery_pkg_runtime_generated_pb = require('../../../../../../k8s.io/apimachinery/pkg/runtime/generated_pb.js');
goog.object.extend(proto, k8s_io_apimachinery_pkg_runtime_generated_pb);
var k8s_io_apimachinery_pkg_runtime_schema_generated_pb = require('../../../../../../k8s.io/apimachinery/pkg/runtime/schema/generated_pb.js');
goog.object.extend(proto, k8s_io_apimachinery_pkg_runtime_schema_generated_pb);
goog.exportSymbol('proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp', null, global);
goog.exportSymbol('proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition', null, global);
goog.exportSymbol('proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList', null, global);
goog.exportSymbol('proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec', null, global);
goog.exportSymbol('proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.displayName = 'proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.displayName = 'proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.displayName = 'proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.displayName = 'proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.repeatedFields_, null);
};
goog.inherits(proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.displayName = 'proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.prototype.toObject = function(opt_includeInstance) {
  return proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp;
  return proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec;
      reader.readMessage(value,proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 3:
      var value = new proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus;
      reader.readMessage(value,proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp} returns this
*/
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CarpSpec spec = 2;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.prototype.getSpec = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec, 2));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec|undefined} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp} returns this
*/
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.prototype.setSpec = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.prototype.clearSpec = function() {
  return this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional CarpStatus status = 3;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.prototype.getStatus = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus, 3));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus|undefined} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp} returns this
*/
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.toObject = function(opt_includeInstance) {
  return proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    status: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    lastprobetime: (f = msg.getLastprobetime()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    lasttransitiontime: (f = msg.getLasttransitiontime()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f),
    reason: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    message: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition;
  return proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setLastprobetime(value);
      break;
    case 4:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setLasttransitiontime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastprobetime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = message.getLasttransitiontime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.setType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.clearType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastProbeTime = 3;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.getLastprobetime = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 3));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition} returns this
*/
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.setLastprobetime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.clearLastprobetime = function() {
  return this.setLastprobetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.hasLastprobetime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 4;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.getLasttransitiontime = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 4));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition} returns this
*/
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.setLasttransitiontime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.clearLasttransitiontime = function() {
  return this.setLasttransitiontime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.hasLasttransitiontime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string reason = 5;
 * @return {string}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.setReason = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.clearReason = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.hasReason = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string message = 6;
 * @return {string}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.prototype.toObject = function(opt_includeInstance) {
  return proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.toObject(includeInstance, f),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList;
  return proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp;
      reader.readMessage(value,proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.ListMeta, 1));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta|undefined} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList} returns this
*/
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Carp items = 2;
 * @return {!Array<!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp>}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp, 2));
};


/**
 * @param {!Array<!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp>} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList} returns this
*/
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.Carp, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpList.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    restartpolicy: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    terminationgraceperiodseconds: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    activedeadlineseconds: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    nodeselectorMap: (f = msg.getNodeselectorMap()) ? f.toObject(includeInstance, undefined) : [],
    serviceaccountname: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    serviceaccount: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    nodename: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    hostnetwork: (f = jspb.Message.getBooleanField(msg, 11)) == null ? undefined : f,
    hostpid: (f = jspb.Message.getBooleanField(msg, 12)) == null ? undefined : f,
    hostipc: (f = jspb.Message.getBooleanField(msg, 13)) == null ? undefined : f,
    hostname: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f,
    subdomain: (f = jspb.Message.getField(msg, 17)) == null ? undefined : f,
    schedulername: (f = jspb.Message.getField(msg, 19)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec;
  return proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRestartpolicy(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTerminationgraceperiodseconds(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setActivedeadlineseconds(value);
      break;
    case 7:
      var value = msg.getNodeselectorMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceaccountname(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceaccount(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodename(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHostnetwork(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHostpid(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHostipc(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostname(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubdomain(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchedulername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getNodeselectorMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeBool(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeString(
      19,
      f
    );
  }
};


/**
 * optional string restartPolicy = 3;
 * @return {string}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.getRestartpolicy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.setRestartpolicy = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.clearRestartpolicy = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.hasRestartpolicy = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 terminationGracePeriodSeconds = 4;
 * @return {number}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.getTerminationgraceperiodseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.setTerminationgraceperiodseconds = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.clearTerminationgraceperiodseconds = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.hasTerminationgraceperiodseconds = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 activeDeadlineSeconds = 5;
 * @return {number}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.getActivedeadlineseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.setActivedeadlineseconds = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.clearActivedeadlineseconds = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.hasActivedeadlineseconds = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * map<string, string> nodeSelector = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.getNodeselectorMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.clearNodeselectorMap = function() {
  this.getNodeselectorMap().clear();
  return this;
};


/**
 * optional string serviceAccountName = 8;
 * @return {string}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.getServiceaccountname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.setServiceaccountname = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.clearServiceaccountname = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.hasServiceaccountname = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string serviceAccount = 9;
 * @return {string}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.getServiceaccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.setServiceaccount = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.clearServiceaccount = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.hasServiceaccount = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string nodeName = 10;
 * @return {string}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.getNodename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.setNodename = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.clearNodename = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.hasNodename = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool hostNetwork = 11;
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.getHostnetwork = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.setHostnetwork = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.clearHostnetwork = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.hasHostnetwork = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool hostPID = 12;
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.getHostpid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.setHostpid = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.clearHostpid = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.hasHostpid = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool hostIPC = 13;
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.getHostipc = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.setHostipc = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.clearHostipc = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.hasHostipc = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string hostname = 16;
 * @return {string}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.getHostname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.setHostname = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.clearHostname = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.hasHostname = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string subdomain = 17;
 * @return {string}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.getSubdomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.setSubdomain = function(value) {
  return jspb.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.clearSubdomain = function() {
  return jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.hasSubdomain = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string schedulername = 19;
 * @return {string}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.getSchedulername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.setSchedulername = function(value) {
  return jspb.Message.setField(this, 19, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.clearSchedulername = function() {
  return jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpSpec.prototype.hasSchedulername = function() {
  return jspb.Message.getField(this, 19) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    phase: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.toObject, includeInstance),
    message: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    reason: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    hostip: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    carpip: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    starttime: (f = msg.getStarttime()) && k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus;
  return proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhase(value);
      break;
    case 2:
      var value = new proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition;
      reader.readMessage(value,proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostip(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCarpip(value);
      break;
    case 7:
      var value = new k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time;
      reader.readMessage(value,k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.deserializeBinaryFromReader);
      msg.setStarttime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStarttime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time.serializeBinaryToWriter
    );
  }
};


/**
 * optional string phase = 1;
 * @return {string}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.getPhase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.setPhase = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.clearPhase = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.hasPhase = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated CarpCondition conditions = 2;
 * @return {!Array<!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition>}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition, 2));
};


/**
 * @param {!Array<!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition>} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} returns this
*/
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpCondition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.setMessage = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.clearMessage = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string reason = 4;
 * @return {string}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.setReason = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.clearReason = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.hasReason = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string hostIP = 5;
 * @return {string}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.getHostip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.setHostip = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.clearHostip = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.hasHostip = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string carpIP = 6;
 * @return {string}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.getCarpip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.setCarpip = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.clearCarpip = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.hasCarpip = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.Time startTime = 7;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.getStarttime = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time} */ (
    jspb.Message.getWrapperField(this, k8s_io_apimachinery_pkg_apis_meta_v1_generated_pb.Time, 7));
};


/**
 * @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.Time|undefined} value
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} returns this
*/
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.setStarttime = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus} returns this
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.clearStarttime = function() {
  return this.setStarttime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1.CarpStatus.prototype.hasStarttime = function() {
  return jspb.Message.getField(this, 7) != null;
};


goog.object.extend(exports, proto.k8s.io.apimachinery.pkg.apis.testapigroup.v1);
